name: Continous Integration Workflow

on:
  push:
    branches:
      - main
      - Back-End-Branch
      - Front-End-Branch
  pull_request:
    branches:
      - main
      - Back-End-Branch
      - Front-End-Branch

permissions:
  contents: read

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "5.7"
          mysql database: ${{ secrets.DATABASE_SCHEMA }}
          mysql root password: ${{ secrets.DATABASE_PASSWORD }}
          mysql user: ${{ secrets.DATABASE_USER}}
      - name: Set up Python 3.7
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        env:
          DATABASE_SCHEMA: ${{ secrets.DATABASE_SCHEMA }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          pytest
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: cd front-end && npm install

      - name: Build Frontend
        run: cd front-end && CI=false npm run build
